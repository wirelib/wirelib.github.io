<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wire - Telegram Bot Library</title>
    <link>https://wirelib.github.io/</link>
    <description>Recent content on Wire - Telegram Bot Library</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://wirelib.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wire</title>
      <link>https://wirelib.github.io/class_reference/wire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/class_reference/wire/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Telegram</title>
      <link>https://wirelib.github.io/class_reference/telegram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/class_reference/telegram/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Context</title>
      <link>https://wirelib.github.io/class_reference/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/class_reference/context/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Echo Bot</title>
      <link>https://wirelib.github.io/examples/echo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/examples/echo/</guid>
      <description>Let&amp;rsquo;s write a simple echo bot that replies with the same message
public class EchoBot { public static void main(String[] args) { // Create our bot instance final Wire bot = new Wire(&amp;quot;token&amp;quot;); // Configure behavior bot.on(UpdateType.MESSAGE, ctx -&amp;gt; { ctx.reply(ctx.getMessage().getText()); return null; // Mandatory! }); // Start polling bot.start(); } }  As you can see the bot configuration is pretty straight forward, and if you have already used [TelegrafJS]() you&amp;rsquo;ll recognize most of the syntax.</description>
    </item>
    
    <item>
      <title>Manual</title>
      <link>https://wirelib.github.io/installation/manual/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/installation/manual/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>The Wire Object</title>
      <link>https://wirelib.github.io/usage/wire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/usage/wire/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Context</title>
      <link>https://wirelib.github.io/usage/wire.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/usage/wire.1/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Maven</title>
      <link>https://wirelib.github.io/installation/maven/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/installation/maven/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Gradle</title>
      <link>https://wirelib.github.io/installation/gradle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/installation/gradle/</guid>
      <description>wip</description>
    </item>
    
    <item>
      <title>Register Callbacks</title>
      <link>https://wirelib.github.io/usage/callbacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/usage/callbacks/</guid>
      <description>A Wire bot is basically a listener that processes updates from Telegram by executing user-defined functions. Those functions must be registered before starting the bot.
In this example we register a callback that will resend the text content of every message it receives (see Echo Bot).
bot.on(UpdateType.MESSAGE, ctx -&amp;gt; { ctx.reply(ctx.getMessage().getText()); return null; });  CAVEAT: Wire is written in Kotlin, and callbacks are implemented as functions of type (ctx: Context) -&amp;gt; Unit.</description>
    </item>
    
    <item>
      <title>Middlewares</title>
      <link>https://wirelib.github.io/usage/middlewares/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/usage/middlewares/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://wirelib.github.io/usage/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wirelib.github.io/usage/context/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>